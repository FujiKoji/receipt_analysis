# Generated by Django 4.1.5 on 2023-02-17 08:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MasterComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="区分"
                    ),
                ),
                (
                    "pattern",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="パターン"
                    ),
                ),
                (
                    "serial_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="一連番号"
                    ),
                ),
                (
                    "comment_kanji_significant_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コメント文＿漢字有効桁数"
                    ),
                ),
                (
                    "comment_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="コメント文＿漢字名称",
                    ),
                ),
                (
                    "comment_cana_significant_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コメント文＿カナ有効桁数"
                    ),
                ),
                (
                    "comment_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="コメント文＿カナ名称",
                    ),
                ),
                (
                    "receipt_edit_info_column1",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="レセプト編集情報１＿カラム位置",
                    ),
                ),
                (
                    "receipt_edit_info_digits1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト編集情報１＿桁数"
                    ),
                ),
                (
                    "receipt_edit_info_column2",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="レセプト編集情報２＿カラム位置",
                    ),
                ),
                (
                    "receipt_edit_info_digits2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト編集情報２＿桁数"
                    ),
                ),
                (
                    "receipt_edit_info_column3",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="レセプト編集情報３＿カラム位置",
                    ),
                ),
                (
                    "receipt_edit_info_digits3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト編集情報３＿桁数"
                    ),
                ),
                (
                    "receipt_edit_info_column4",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="レセプト編集情報４＿カラム位置",
                    ),
                ),
                (
                    "receipt_edit_info_digits4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト編集情報４＿桁数"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "choice_comment_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="選択式コメント識別"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "commnet_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コメントコード"
                    ),
                ),
                (
                    "publication_order_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公表順序番号"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:コメントマスター",
                "db_table": "master_comment",
            },
        ),
        migrations.CreateModel(
            name="MasterDental",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "dentation_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="歯式コード",
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "dentation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="歯式名称",
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:歯式マスター",
                "db_table": "master_dental",
            },
        ),
        migrations.CreateModel(
            name="MasterDisease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "disease_name_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名コード"
                    ),
                ),
                (
                    "destination_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="移行先コード"
                    ),
                ),
                (
                    "disease_bassic_name_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名基本名称桁数"
                    ),
                ),
                (
                    "disease_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="傷病名基本名称",
                    ),
                ),
                (
                    "disease_abbreviation_name_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名省略名称桁数"
                    ),
                ),
                (
                    "disease_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="傷病名省略名称",
                    ),
                ),
                (
                    "disease_cana_name_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名カナ名称桁数"
                    ),
                ),
                (
                    "disease_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="傷病名カナ名称",
                    ),
                ),
                (
                    "disease_control_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="病名管理番号"
                    ),
                ),
                (
                    "adoption_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="採択区分"
                    ),
                ),
                (
                    "disease_name_exchange_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="病名交換用コード",
                    ),
                ),
                (
                    "ICD_10_1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="ICD-10-1",
                    ),
                ),
                (
                    "ICD_10_2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="ICD-10-2",
                    ),
                ),
                (
                    "ICD_10_1_2013",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="ICD-10-1(2013)",
                    ),
                ),
                (
                    "ICD_10_2_2013",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="ICD-10-2(2013)",
                    ),
                ),
                (
                    "reserve1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "single_use_ban_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単独使用禁止区分"
                    ),
                ),
                (
                    "no_insurance_claim_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="保険請求外区分"
                    ),
                ),
                (
                    "special_disease_target_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="特定疾患等対象区分"
                    ),
                ),
                (
                    "listing_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="収載年月日"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "disease_bassic_name_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="傷病名基本名称（変更情報）",
                    ),
                ),
                (
                    "disease_abbreviation_name_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="傷病名省略名称（変更情報）",
                    ),
                ),
                (
                    "disease_cana_name_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="傷病名カナ名称（変更情報）",
                    ),
                ),
                (
                    "adoption_type_change_info",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="採択区分（変更情報）"
                    ),
                ),
                (
                    "disease_name_exchange_code_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="病名交換用コード（変更情報）",
                    ),
                ),
                (
                    "ICD_10_1_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="ICD-10-1（変更情報）",
                    ),
                ),
                (
                    "ICD_10_2_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="ICD-10-2（変更情報）",
                    ),
                ),
                (
                    "dental_disease_abbreviation_name_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="歯科傷病名省略名称（変更情報）",
                    ),
                ),
                (
                    "intractable_disease_out_target_type_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="難病外来対象区分（変更情報）",
                    ),
                ),
                (
                    "dental_special_disease_target_type_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="歯科特定疾患対象区分（変更情報）",
                    ),
                ),
                (
                    "single_use_ban_type_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="単独使用禁止区分（変更情報）",
                    ),
                ),
                (
                    "no_insurance_claim_type_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="保険請求外区分（変更情報）",
                    ),
                ),
                (
                    "special_disease_target_type_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="特定疾患対象区分（変更情報）",
                    ),
                ),
                (
                    "destination_disease_control_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="移行先病名管理番号"
                    ),
                ),
                (
                    "dental_disease_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="歯科傷病名省略名称",
                    ),
                ),
                (
                    "reserve2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "dental_disease_abbreviation_name_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科傷病名省略名称桁数"
                    ),
                ),
                (
                    "intractable_disease_out_target_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="難病外来対象区分"
                    ),
                ),
                (
                    "dental_special_disease_target_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科特定疾患対象区分"
                    ),
                ),
                (
                    "ICD_10_1_2013_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="ICD-10_1(2013)(変更情報)",
                    ),
                ),
                (
                    "ICD_10_2_2013_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="ICD-10_2(2013)(変更情報)",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:傷病名マスター",
                "db_table": "master_disease",
            },
        ),
        migrations.CreateModel(
            name="MasterDispensing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "dispensing_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="調剤行為コード"
                    ),
                ),
                (
                    "dispensing_kanji_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="調剤行為名称＿漢字有効桁数",
                    ),
                ),
                (
                    "dispensing_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="調剤行為名称＿漢字名称",
                    ),
                ),
                (
                    "dispensing_cana_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="調剤行為名称＿カナ有効桁数",
                    ),
                ),
                (
                    "dispensing_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="調剤行為名称＿カナ名称",
                    ),
                ),
                (
                    "receipt_mark_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト表示用記号コード"
                    ),
                ),
                (
                    "receipt_display_order_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト表示順番号"
                    ),
                ),
                (
                    "new_score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="新又は現点数識別"
                    ),
                ),
                (
                    "dispensing_quantity_calculation_flag",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="調剤数量計算フラグ"
                    ),
                ),
                (
                    "score_calculation_new_score",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="点数計算＿新又は現点数（基本点数）",
                    ),
                ),
                (
                    "score_calculation_etch_value_identification",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="点数計算＿きざみ値計算識別",
                    ),
                ),
                (
                    "score_calculation_lower_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数計算＿下限値"
                    ),
                ),
                (
                    "score_calculation_upper_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数計算＿上限値"
                    ),
                ),
                (
                    "score_calculation_etch_value",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数計算＿きざみ値"
                    ),
                ),
                (
                    "score_calculation_etch_score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数計算＿きざみ点数"
                    ),
                ),
                (
                    "score_calculation_limits_error_process",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="点数計算＿上下限エラー処理",
                    ),
                ),
                (
                    "subtraction_act_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="減算行為区分"
                    ),
                ),
                (
                    "subtraction_subject_act_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="減算対象行為区分"
                    ),
                ),
                (
                    "dispensing_identification_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="調剤行為識別区分"
                    ),
                ),
                (
                    "comprehensive_identification_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="包括識別区分"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "dispensing_type1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="調剤行為種類（１）"
                    ),
                ),
                (
                    "dispensing_type2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="調剤行為種類（２）"
                    ),
                ),
                (
                    "late_elderly_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="後期高齢者適用区分"
                    ),
                ),
                (
                    "facility_standard_code1",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード①",
                    ),
                ),
                (
                    "facility_standard_code2",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード②",
                    ),
                ),
                (
                    "facility_standard_code3",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード③",
                    ),
                ),
                (
                    "facility_standard_code4",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード④",
                    ),
                ),
                (
                    "facility_standard_code5",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード⑤",
                    ),
                ),
                (
                    "facility_standard_code6",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード⑥",
                    ),
                ),
                (
                    "facility_standard_code7",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード⑦",
                    ),
                ),
                (
                    "facility_standard_code8",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード⑧",
                    ),
                ),
                (
                    "facility_standard_code9",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード⑨",
                    ),
                ),
                (
                    "facility_standard_code10",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準＿施設基準コード⑩",
                    ),
                ),
                (
                    "receipt_unit_contradiction_type_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="レセプト単位背反区分コード",
                    ),
                ),
                (
                    "prescription_reception_unit_contradictory_type_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="処方箋受付回単位背反区分コード",
                    ),
                ),
                (
                    "dispensing_unit_contraction_type_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="調剤単位背反区分コード"
                    ),
                ),
                (
                    "special_drug",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="麻薬・毒薬・覚醒剤原料・向精神薬",
                    ),
                ),
                (
                    "time_add_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="時間加算区分"
                    ),
                ),
                (
                    "dosage_form",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="剤形"
                    ),
                ),
                (
                    "receipt_unit_upper_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト単位＿上限回数"
                    ),
                ),
                (
                    "receipt_unit_upper_limit_error_proces",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="レセプト単位＿上限回数エラー処理",
                    ),
                ),
                (
                    "receipt_unit_lower_limit",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="処方箋受付回単位＿上限回数",
                    ),
                ),
                (
                    "receipt_unit_lower_limit_error_proces",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="処方箋受付回単位＿上限回数エラー処理",
                    ),
                ),
                (
                    "annotation_add_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="注加算＿コード"
                    ),
                ),
                (
                    "annotation_add_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="注加算＿通番",
                    ),
                ),
                (
                    "limits_age_lower_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上下限年齢＿下限年齢",
                    ),
                ),
                (
                    "limits_age_upper_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上下限年齢＿上限年齢",
                    ),
                ),
                (
                    "pharmaceutical_management_fee_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="薬学管理料区分"
                    ),
                ),
                (
                    "bulletin_identification_type1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示等識別区分（１）"
                    ),
                ),
                (
                    "bulletin_identification_type2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示等識別区分（２）"
                    ),
                ),
                (
                    "old_score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="旧点数＿点数識別"
                    ),
                ),
                (
                    "old_score_etc",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="旧点数＿旧点数"
                    ),
                ),
                (
                    "change_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "publication_order_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公表順序番号"
                    ),
                ),
                (
                    "code_table_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コード表用番号"
                    ),
                ),
                (
                    "bulletin_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示・通知関連番号"
                    ),
                ),
                (
                    "transfer_related",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="異動関連"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:調剤行為マスター",
                "db_table": "master_dispensing",
            },
        ),
        migrations.CreateModel(
            name="MasterDrug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "drug_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医薬品コード"
                    ),
                ),
                (
                    "drug_kanji_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="医薬品名・規格名＿漢字有効桁数",
                    ),
                ),
                (
                    "drug_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="医薬品名・規格名＿漢字名称",
                    ),
                ),
                (
                    "drug_cana_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="医薬品名・規格名＿カナ有効桁数",
                    ),
                ),
                (
                    "drug_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="医薬品名・規格名＿カナ名称",
                    ),
                ),
                (
                    "unit_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単位＿コード"
                    ),
                ),
                (
                    "unit_kanji_significant_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単位＿漢字有効桁数"
                    ),
                ),
                (
                    "unit_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="単位＿漢字名称",
                    ),
                ),
                (
                    "new_cash_amount_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="新又は現金額＿金額種別"
                    ),
                ),
                (
                    "new_cash_new_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="新又は現金額＿新又は現金額",
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "special_drug",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="麻薬・毒薬・覚醒剤原料・向精神薬",
                    ),
                ),
                (
                    "neuroleptic",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="神経破壊剤"
                    ),
                ),
                (
                    "biologics",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="生物学的製薬"
                    ),
                ),
                (
                    "generic",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="後発品"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "dental_special_drug",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科特定薬剤"
                    ),
                ),
                (
                    "contrast_drug",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="造影（補助）剤"
                    ),
                ),
                (
                    "Injection_volume",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="注射容量"
                    ),
                ),
                (
                    "listing_method_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="収載方式等識別"
                    ),
                ),
                (
                    "product_name_etc",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="商品名等関連"
                    ),
                ),
                (
                    "old_cash_amount_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="旧金額＿金額種別"
                    ),
                ),
                (
                    "old_cash_old_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="旧金額＿旧金額",
                    ),
                ),
                (
                    "kanji_name_change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="漢字名称変更区分"
                    ),
                ),
                (
                    "cana_name_change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="カナ名称変更区分"
                    ),
                ),
                (
                    "dosage_form",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="剤形"
                    ),
                ),
                (
                    "reserve3",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "drug_price_bassic_listing_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="薬価基準収載医薬品コード",
                    ),
                ),
                (
                    "publication_order_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公表順序番号"
                    ),
                ),
                (
                    "expiry_day",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="経過措置年月日又は商品名医薬品コード使用期限",
                    ),
                ),
                (
                    "bassic_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="基本漢字名称",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:医薬品マスター",
                "db_table": "master_drug",
            },
        ),
        migrations.CreateModel(
            name="MasterModifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "modifier_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="修飾語コード"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "modifier_name_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="修飾語名称桁数"
                    ),
                ),
                (
                    "modifier_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="修飾語名称",
                    ),
                ),
                (
                    "reserve3",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "modifier_cana_name_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="修飾語カナ名称桁数"
                    ),
                ),
                (
                    "modifier_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="修飾語カナ名称",
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "modifier_name_change_info",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="修飾語名称（変更情報）"
                    ),
                ),
                (
                    "modifier_cana_name_change_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="修飾語カナ名称（変更情報）",
                    ),
                ),
                (
                    "listing_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="収載年月日"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "modifier_control_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="修飾語管理番号"
                    ),
                ),
                (
                    "modifier_exchange_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="修飾語交換用コード",
                    ),
                ),
                (
                    "modifier_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="修飾語区分",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:修飾語マスター",
                "db_table": "master_modifier",
            },
        ),
        migrations.CreateModel(
            name="MasterPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療行為コード"
                    ),
                ),
                (
                    "practice_abbreviation_name_kanji_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="診療行為省略名称＿省略漢字有効桁数",
                    ),
                ),
                (
                    "practice_abbreviation_name_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為省略名称＿省略漢字名称",
                    ),
                ),
                (
                    "practice_abbreviation_name_cana_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="診療行為省略名称＿省略カナ有効桁数",
                    ),
                ),
                (
                    "practice_abbreviation_name_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為省略名称＿省略カナ名称",
                    ),
                ),
                (
                    "data_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="データ規格コード"
                    ),
                ),
                (
                    "data_kanji_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="データ規格名＿漢字有効桁数",
                    ),
                ),
                (
                    "data_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="データ規格名＿漢字名称",
                    ),
                ),
                (
                    "new_score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="新又は現点数＿点数識別"
                    ),
                ),
                (
                    "new_score_etc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="新又は現点数＿新又は現点数",
                    ),
                ),
                (
                    "in_out_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="入外適用区分"
                    ),
                ),
                (
                    "late_elderly_medical_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="後期高齢者医療適用区分"
                    ),
                ),
                (
                    "score_destination_identification_out",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="点数欄集計先識別（入院外）",
                    ),
                ),
                (
                    "comprehensive_inspection",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="包括対象検査"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "dpc_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="DPC適用区分"
                    ),
                ),
                (
                    "hospital_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="病院・診療所区分"
                    ),
                ),
                (
                    "surgery_support_addition_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="画像等手術支援加算区分"
                    ),
                ),
                (
                    "medical_observation_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医療観察法対象区分"
                    ),
                ),
                (
                    "nursing_addition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="看護加算"
                    ),
                ),
                (
                    "anesthesia_identification_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="麻酔識別区分"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "disease_name_related_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名関連区分"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "real_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="実日数"
                    ),
                ),
                (
                    "days_or_times",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="日数・回数"
                    ),
                ),
                (
                    "drug_name_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医薬品関連区分"
                    ),
                ),
                (
                    "etch_value_calculation_identification",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="きざみ値＿きざみ値計算識別",
                    ),
                ),
                (
                    "etch_lower_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ値＿下限値"
                    ),
                ),
                (
                    "etch_upper_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ値＿上限値"
                    ),
                ),
                (
                    "etch_value",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ値＿きざみ値"
                    ),
                ),
                (
                    "etch_value_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="きざみ値＿きざみ点数",
                    ),
                ),
                (
                    "etch_limits_error_process",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="きざみ値＿上下限エラー処理",
                    ),
                ),
                (
                    "upper_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="上限回数＿上限回数"
                    ),
                ),
                (
                    "upper_limit_error_process",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="上限回数＿上限回数エラー処理",
                    ),
                ),
                (
                    "annotation_add_item_add_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="注加算＿注加算コード"
                    ),
                ),
                (
                    "annotation_add_item_add_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="注加算＿注加算通番",
                    ),
                ),
                (
                    "general_rule_age",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="通則年齢"
                    ),
                ),
                (
                    "etch_limits_lower_limit",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上下限年齢＿下限年齢",
                    ),
                ),
                (
                    "etch_limits_upper_limit",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上下限年齢＿上限年齢",
                    ),
                ),
                (
                    "time_addition_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="時間加算区分"
                    ),
                ),
                (
                    "base_conformance_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="基準適合識別＿適合区分"
                    ),
                ),
                (
                    "base_conformance_facility_standard",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="基準適合識別＿対象施設基準",
                    ),
                ),
                (
                    "treatment_infant_addition_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="処置乳幼児加算区分"
                    ),
                ),
                (
                    "very_low_birth_weight_infant_addition_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="極低出生体重児加算区分"
                    ),
                ),
                (
                    "basic_hospital_fee_deduction_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="入院基本料減算対象識別"
                    ),
                ),
                (
                    "donors_class_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="ドナー分集計区分"
                    ),
                ),
                (
                    "judgment_class_inspections_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="検査等実施判断区分"
                    ),
                ),
                (
                    "judgment_class_inspections_group_type",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="検査等実施判断グループ区分",
                    ),
                ),
                (
                    "diminution_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="逓減対象区分"
                    ),
                ),
                (
                    "spinal_cord_evoked_potential_measurement_add_type",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="脊髄誘発電位測定等加算区分",
                    ),
                ),
                (
                    "neck_dissection_combined_addition_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="頸部郭清術併施加算区分 "
                    ),
                ),
                (
                    "auto_suturer_add_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="自動縫合器加算区分"
                    ),
                ),
                (
                    "out_management_add_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="外来管理加算区分 "
                    ),
                ),
                (
                    "old_score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="旧点数＿点数識別"
                    ),
                ),
                (
                    "old_score_etc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="旧点数＿旧点数",
                    ),
                ),
                (
                    "kanji_name_change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="漢字名称変更区分"
                    ),
                ),
                (
                    "cana_name_change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="カナ名称変更区分"
                    ),
                ),
                (
                    "speciment_test_comment",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="検体検査コメント"
                    ),
                ),
                (
                    "general_rule_add_score_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="通則加算所定点数対象区分"
                    ),
                ),
                (
                    "comprehensive_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="包括逓減区分"
                    ),
                ),
                (
                    "ultrasonic_endoscope_add_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="超音波内視鏡加算区分"
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "score_destination_identification_in",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数欄集計先識別（入院）"
                    ),
                ),
                (
                    "auto_anastomosis_add_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="自動吻合器加算区分"
                    ),
                ),
                (
                    "bulletin_identification_type1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示等識別区分（１）"
                    ),
                ),
                (
                    "bulletin_identification_type2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示等識別区分（２）"
                    ),
                ),
                (
                    "area_add",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="地域加算"
                    ),
                ),
                (
                    "beds_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="病床数区分"
                    ),
                ),
                (
                    "facility_standard_code1",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準１＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code2",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準２＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code3",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準３＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code4",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準４＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code5",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準５＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code6",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準６＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code7",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準７＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code8",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準８＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code9",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準９＿施設基準コード",
                    ),
                ),
                (
                    "facility_standard_code10",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="施設基準１０＿施設基準コード",
                    ),
                ),
                (
                    "ultrasonic_coagulator_type",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="超音波凝固切開装置等加算区分",
                    ),
                ),
                (
                    "short_stay_surgery",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="短期滞在手術"
                    ),
                ),
                (
                    "dental_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科適用区分"
                    ),
                ),
                (
                    "code_table_number_alphabet",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="コード表用番号（アルファベット部）",
                    ),
                ),
                (
                    "bulletin_number_alphabet",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示・通知関連番号（アルファベット部）",
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "publication_order_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公表順序番号"
                    ),
                ),
                (
                    "code_table_number_chapter",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コード表用番号＿章"
                    ),
                ),
                (
                    "code_table_number_department",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コード表用番号＿部"
                    ),
                ),
                (
                    "code_table_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コード表用番号＿区分番号"
                    ),
                ),
                (
                    "code_table_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コード表用番号＿枝番"
                    ),
                ),
                (
                    "code_table_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コード表用番号＿項番"
                    ),
                ),
                (
                    "bulletin_number_chapter",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示・通知関連番号＿章"
                    ),
                ),
                (
                    "bulletin_number_department",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示・通知関連番号＿部"
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="告示・通知関連番号＿区分番号",
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示・通知関連番号＿枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示・通知関連番号＿項番"
                    ),
                ),
                (
                    "age_add1_lower_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算１＿下限年齢",
                    ),
                ),
                (
                    "age_add1_upper_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算１＿上限年齢",
                    ),
                ),
                (
                    "age_add1_annotation_add_item_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="年齢加算１＿注加算診療行為コード",
                    ),
                ),
                (
                    "age_add2_lower_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算２＿下限年齢",
                    ),
                ),
                (
                    "age_add2_upper_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算２＿上限年齢",
                    ),
                ),
                (
                    "age_add2_annotation_add_item_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="年齢加算２＿注加算診療行為コード",
                    ),
                ),
                (
                    "age_add3_lower_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算３＿下限年齢",
                    ),
                ),
                (
                    "age_add3_upper_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算３＿上限年齢",
                    ),
                ),
                (
                    "age_add3_annotation_add_item_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="年齢加算３＿注加算診療行為コード",
                    ),
                ),
                (
                    "age_add4_lower_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算４＿下限年齢",
                    ),
                ),
                (
                    "age_add4_upper_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="年齢加算４＿上限年齢",
                    ),
                ),
                (
                    "age_add4_annotation_add_item_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="年齢加算４＿注加算診療行為コード",
                    ),
                ),
                (
                    "transfer_related",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="異動関連"
                    ),
                ),
                (
                    "basic_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="基本漢字名称",
                    ),
                ),
                (
                    "sinus_surgery_endoscope_addition",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="副鼻腔手術用内視鏡加算",
                    ),
                ),
                (
                    "sinus_surgery_tissue_resection_equipment_addition",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="副鼻腔手術用骨軟部組織切除機器加算 ",
                    ),
                ),
                (
                    "long_term_anesthesia_management_addition",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="長時間麻酔管理加算",
                    ),
                ),
                (
                    "score_type_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="点数表区分番号",
                    ),
                ),
                (
                    "monitoring_addition",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="モニタリング加算",
                    ),
                ),
                (
                    "cryopreserved_allogeneic_tissue_addition",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="凍結保存同種組織加算",
                    ),
                ),
                (
                    "malignant_tumor_histopathological_sample_addition",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="悪性腫瘍病理組織標本加算",
                    ),
                ),
                (
                    "external_fixator_addition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="創外固定器加算"
                    ),
                ),
                (
                    "ultrasonic_cutting_equipment_addition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="超音波切削機器加算"
                    ),
                ),
                (
                    "left_atrial_appendage_closure_surgery_addition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="左心耳閉鎖術併施加算"
                    ),
                ),
                (
                    "improve_countermeasures_against_foreign_infections_additions",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="外来感染対策向上加算等"
                    ),
                ),
                (
                    "otolaryngology_infant_treatment_addition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="耳鼻咽喉科乳幼児処置加算"
                    ),
                ),
                (
                    "otolaryngology_infant_treatment_drug_support_addition",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="耳鼻咽喉科小児抗菌薬適正使用支援加算",
                    ),
                ),
                (
                    "incision_local_negative_treatment_device_addition",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="切開創局所陰圧閉鎖処置機器加算",
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:医科診療行為マスター",
                "db_table": "master_practice",
            },
        ),
        migrations.CreateModel(
            name="MasterSpecialEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "special_equipment_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="特定器材コード"
                    ),
                ),
                (
                    "special_equipment_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="特定器材名・規格名＿漢字有効桁数",
                    ),
                ),
                (
                    "special_equipment_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="特定器材名・規格名＿漢字名称",
                    ),
                ),
                (
                    "special_equipment_cana_significant_digits",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="特定器材名・規格名＿カナ有効桁数",
                    ),
                ),
                (
                    "special_equipment_cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="特定器材名・規格名＿カナ名称",
                    ),
                ),
                (
                    "unit_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単位＿コード"
                    ),
                ),
                (
                    "unit_kanji_significant_digits",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単位＿漢字有効桁数"
                    ),
                ),
                (
                    "unit_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="単位＿漢字名称",
                    ),
                ),
                (
                    "new_cash_amount_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="新又は現金額＿金額種別"
                    ),
                ),
                (
                    "new_cash_new_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="新又は現金額＿新又は現金額",
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "age_add_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="年齢加算区分"
                    ),
                ),
                (
                    "age_limit_lower_limit",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上下限年齢＿下限年齢",
                    ),
                ),
                (
                    "age_limit_upper_limit",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上下限年齢＿上限年齢",
                    ),
                ),
                (
                    "old_cash_amount_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="旧金額＿金額種別"
                    ),
                ),
                (
                    "old_cash_old_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="旧金額＿旧金額",
                    ),
                ),
                (
                    "kanji_name_change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="漢字名称変更区分"
                    ),
                ),
                (
                    "cana_name_change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="カナ名称変更区分"
                    ),
                ),
                (
                    "oxygen_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="酸素等区分"
                    ),
                ),
                (
                    "special_equipment_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="特定器材種別"
                    ),
                ),
                (
                    "upper_limit_price",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="上限価格"
                    ),
                ),
                (
                    "lower_limit_price",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="上限点数"
                    ),
                ),
                (
                    "reserve2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "publication_order_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公表順序番号"
                    ),
                ),
                (
                    "abolition_new_etc",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="廃止・新設関連"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "expiry_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="経過措置年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "bulletin_number_other_table_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号＿別表番号"
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号＿区分番号"
                    ),
                ),
                (
                    "dpc_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="DPC適用区分"
                    ),
                ),
                (
                    "reserve3",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "reserve4",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "reserve5",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備",
                    ),
                ),
                (
                    "bassic_kanji_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="基本漢字名称",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "M:特定器材マスター",
                "db_table": "master_special_equipment",
            },
        ),
        migrations.CreateModel(
            name="PracticeRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="名前",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="診療年月日"
                    ),
                ),
                (
                    "practice_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="治療／予防"
                    ),
                ),
                (
                    "dental_practice_initial_medical_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_初診",
                    ),
                ),
                (
                    "dental_practice_second_medical_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_再診",
                    ),
                ),
                (
                    "dental_practice_management_rehab",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_管理・リハ",
                    ),
                ),
                (
                    "dental_practice_medication_injection",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_投薬・注射",
                    ),
                ),
                (
                    "dental_practice_xray_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_X線検査",
                    ),
                ),
                (
                    "dental_practice_procedures_surgeries1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_処置・手術1",
                    ),
                ),
                (
                    "dental_practice_procedures_surgeries2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_処置・手術2",
                    ),
                ),
                (
                    "dental_practice_procedures_surgeries3",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_処置・手術3",
                    ),
                ),
                (
                    "dental_practice_procedures_surgeries_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_処置・手術（その他）",
                    ),
                ),
                (
                    "dental_practice_anesthesia",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_麻酔",
                    ),
                ),
                (
                    "dental_practice_restoration_prosthetics1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_修復・補綴1",
                    ),
                ),
                (
                    "dental_practice_restoration_prosthetics2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_修復・補綴2",
                    ),
                ),
                (
                    "dental_practice_restoration_prosthetics3",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_修復・補綴3",
                    ),
                ),
                (
                    "dental_practice_restoration_prosthetics_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_修復・補綴（その他）",
                    ),
                ),
                (
                    "dental_practice_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_全体のその他",
                    ),
                ),
                (
                    "dental_practice_summary",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="歯科診療行為_摘要",
                    ),
                ),
                (
                    "drug_initial_medical_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_初診",
                    ),
                ),
                (
                    "drug_second_medical_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_再診",
                    ),
                ),
                (
                    "drug_management_rehab",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_管理・リハ",
                    ),
                ),
                (
                    "drug_medication_injection",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_投薬・注射",
                    ),
                ),
                (
                    "drug_xray_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_X線検査",
                    ),
                ),
                (
                    "drug_procedures_surgeries1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_処置・手術1",
                    ),
                ),
                (
                    "drug_procedures_surgeries2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_処置・手術2",
                    ),
                ),
                (
                    "drug_procedures_surgeries3",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_処置・手術3",
                    ),
                ),
                (
                    "drug_procedures_surgeries_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_処置・手術（その他）",
                    ),
                ),
                (
                    "drug_anesthesia",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_麻酔",
                    ),
                ),
                (
                    "drug_restoration_prosthetics1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_修復・補綴1",
                    ),
                ),
                (
                    "drug_restoration_prosthetics2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_修復・補綴2",
                    ),
                ),
                (
                    "drug_restoration_prosthetics3",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_修復・補綴3",
                    ),
                ),
                (
                    "drug_restoration_prosthetics_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_修復・補綴（その他）",
                    ),
                ),
                (
                    "drug_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_全体のその他",
                    ),
                ),
                (
                    "drug_summary",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="医薬品_摘要",
                    ),
                ),
                (
                    "specific_equipment_initial_medical_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_初診",
                    ),
                ),
                (
                    "specific_equipment_second_medical_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_再診",
                    ),
                ),
                (
                    "specific_equipment_management_rehab",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_管理・リハ",
                    ),
                ),
                (
                    "specific_equipment_medication_injection",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_投薬・注射",
                    ),
                ),
                (
                    "specific_equipment_xray_examination",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_X線検査",
                    ),
                ),
                (
                    "specific_equipment_procedures_surgeries1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_処置・手術1",
                    ),
                ),
                (
                    "specific_equipment_procedures_surgeries2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_処置・手術2",
                    ),
                ),
                (
                    "specific_equipment_procedures_surgeries3",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_処置・手術3",
                    ),
                ),
                (
                    "specific_equipment_procedures_surgeries_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_処置・手術（その他）",
                    ),
                ),
                (
                    "specific_equipment_anesthesia",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_麻酔",
                    ),
                ),
                (
                    "specific_equipment_restoration_prosthetics1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_修復・補綴1",
                    ),
                ),
                (
                    "specific_equipment_restoration_prosthetics2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_修復・補綴2",
                    ),
                ),
                (
                    "specific_equipment_restoration_prosthetics3",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_修復・補綴3",
                    ),
                ),
                (
                    "specific_equipment_restoration_prosthetics_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_修復・補綴（その他）",
                    ),
                ),
                (
                    "specific_equipment_other",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_全体のその他",
                    ),
                ),
                (
                    "specific_equipment_summary",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="特定機材_摘要",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "診療情報",
                "db_table": "practice_record",
            },
        ),
        migrations.CreateModel(
            name="RecordComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "practice_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療識別"
                    ),
                ),
                (
                    "payer_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="負担区分",
                    ),
                ),
                (
                    "comment_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コメントコード"
                    ),
                ),
                (
                    "character_data",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="文字データ",
                    ),
                ),
                (
                    "dentation_comment",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="歯式(コメント)",
                    ),
                ),
                (
                    "reserve1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備_1",
                    ),
                ),
                (
                    "reserve2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備_2",
                    ),
                ),
                (
                    "reserve3",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="予備_3",
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備_4"
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備_5"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:コメントレコード",
                "db_table": "record_comment",
            },
        ),
        migrations.CreateModel(
            name="RecordCounterAmount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "counter_amount_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="窓口負担額区分"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備1"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備2"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備3"
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備4"
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備5"
                    ),
                ),
                (
                    "reserve6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備6"
                    ),
                ),
                (
                    "reserve7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備7"
                    ),
                ),
                (
                    "reserve8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備8"
                    ),
                ),
                (
                    "reserve9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備9"
                    ),
                ),
                (
                    "reserve10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備10"
                    ),
                ),
                (
                    "reserve11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備11"
                    ),
                ),
                (
                    "reserve12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備12"
                    ),
                ),
                (
                    "reserve13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備13"
                    ),
                ),
                (
                    "reserve14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備14"
                    ),
                ),
                (
                    "reserve15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備15"
                    ),
                ),
                (
                    "reserve16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備16"
                    ),
                ),
                (
                    "reserve17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備17"
                    ),
                ),
                (
                    "reserve18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備18"
                    ),
                ),
                (
                    "reserve19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備19"
                    ),
                ),
                (
                    "reserve20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備20"
                    ),
                ),
                (
                    "reserve21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備21"
                    ),
                ),
                (
                    "reserve22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備22"
                    ),
                ),
                (
                    "reserve23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備23"
                    ),
                ),
                (
                    "reserve24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備24"
                    ),
                ),
                (
                    "reserve25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備25"
                    ),
                ),
                (
                    "reserve26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備26"
                    ),
                ),
                (
                    "reserve27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備27"
                    ),
                ),
                (
                    "reserve28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備28"
                    ),
                ),
                (
                    "reserve29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備29"
                    ),
                ),
                (
                    "reserve30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備30"
                    ),
                ),
                (
                    "reserve31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備31"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:窓口負担額レコード",
                "db_table": "record_counter_amount",
            },
        ),
        migrations.CreateModel(
            name="RecordDentalPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "practice_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療識別"
                    ),
                ),
                (
                    "payer_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="負担区分",
                    ),
                ),
                (
                    "practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療行為コード"
                    ),
                ),
                (
                    "practice_volume_data1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療行為数量データ1"
                    ),
                ),
                (
                    "practice_volume_data2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療行為数量データ2"
                    ),
                ),
                (
                    "add_code1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード1",
                    ),
                ),
                (
                    "add_volume_data1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ1"
                    ),
                ),
                (
                    "add_code2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード2",
                    ),
                ),
                (
                    "add_volume_data2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ2"
                    ),
                ),
                (
                    "add_code3",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード3",
                    ),
                ),
                (
                    "add_volume_data3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ3"
                    ),
                ),
                (
                    "add_code4",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード4",
                    ),
                ),
                (
                    "add_volume_data4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ4"
                    ),
                ),
                (
                    "add_code5",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード5",
                    ),
                ),
                (
                    "add_volume_data5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ5"
                    ),
                ),
                (
                    "add_code6",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード6",
                    ),
                ),
                (
                    "add_volume_data6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ6"
                    ),
                ),
                (
                    "add_code7",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード7",
                    ),
                ),
                (
                    "add_volume_data7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ7"
                    ),
                ),
                (
                    "add_code8",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード8",
                    ),
                ),
                (
                    "add_volume_data8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ8"
                    ),
                ),
                (
                    "add_code9",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード9",
                    ),
                ),
                (
                    "add_volume_data9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ9"
                    ),
                ),
                (
                    "add_code10",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード10",
                    ),
                ),
                (
                    "add_volume_data10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ10"
                    ),
                ),
                (
                    "add_code11",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード11",
                    ),
                ),
                (
                    "add_volume_data11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ11"
                    ),
                ),
                (
                    "add_code12",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード12",
                    ),
                ),
                (
                    "add_volume_data12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ12"
                    ),
                ),
                (
                    "add_code13",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード13",
                    ),
                ),
                (
                    "add_volume_data13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ13"
                    ),
                ),
                (
                    "add_code14",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード14",
                    ),
                ),
                (
                    "add_volume_data14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ14"
                    ),
                ),
                (
                    "add_code15",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード15",
                    ),
                ),
                (
                    "add_volume_data15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ15"
                    ),
                ),
                (
                    "add_code16",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード16",
                    ),
                ),
                (
                    "add_volume_data16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ16"
                    ),
                ),
                (
                    "add_code17",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード17",
                    ),
                ),
                (
                    "add_volume_data17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ17"
                    ),
                ),
                (
                    "add_code18",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード18",
                    ),
                ),
                (
                    "add_volume_data18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ18"
                    ),
                ),
                (
                    "add_code19",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード19",
                    ),
                ),
                (
                    "add_volume_data19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ19"
                    ),
                ),
                (
                    "add_code20",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード20",
                    ),
                ),
                (
                    "add_volume_data20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ20"
                    ),
                ),
                (
                    "add_code21",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード21",
                    ),
                ),
                (
                    "add_volume_data21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ21"
                    ),
                ),
                (
                    "add_code22",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード22",
                    ),
                ),
                (
                    "add_volume_data22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ22"
                    ),
                ),
                (
                    "add_code23",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード23",
                    ),
                ),
                (
                    "add_volume_data23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ23"
                    ),
                ),
                (
                    "add_code24",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード24",
                    ),
                ),
                (
                    "add_volume_data24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ24"
                    ),
                ),
                (
                    "add_code25",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード25",
                    ),
                ),
                (
                    "add_volume_data25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ25"
                    ),
                ),
                (
                    "add_code26",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード26",
                    ),
                ),
                (
                    "add_volume_data26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ26"
                    ),
                ),
                (
                    "add_code27",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード27",
                    ),
                ),
                (
                    "add_volume_data27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ27"
                    ),
                ),
                (
                    "add_code28",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード28",
                    ),
                ),
                (
                    "add_volume_data28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ28"
                    ),
                ),
                (
                    "add_code29",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード29",
                    ),
                ),
                (
                    "add_volume_data29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ29"
                    ),
                ),
                (
                    "add_code30",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード30",
                    ),
                ),
                (
                    "add_volume_data30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ30"
                    ),
                ),
                (
                    "add_code31",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード31",
                    ),
                ),
                (
                    "add_volume_data31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ31"
                    ),
                ),
                (
                    "add_code32",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード32",
                    ),
                ),
                (
                    "add_volume_data32",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ32"
                    ),
                ),
                (
                    "add_code33",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード33",
                    ),
                ),
                (
                    "add_volume_data33",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ33"
                    ),
                ),
                (
                    "add_code34",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード34",
                    ),
                ),
                (
                    "add_volume_data34",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ34"
                    ),
                ),
                (
                    "add_code35",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード35",
                    ),
                ),
                (
                    "add_volume_data35",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="加算数量データ35"
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数"
                    ),
                ),
                (
                    "count",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="回数"
                    ),
                ),
                (
                    "calculation_day_info1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_1日の情報"
                    ),
                ),
                (
                    "calculation_day_info2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_2日の情報"
                    ),
                ),
                (
                    "calculation_day_info3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_3日の情報"
                    ),
                ),
                (
                    "calculation_day_info4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_4日の情報"
                    ),
                ),
                (
                    "calculation_day_info5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_5日の情報"
                    ),
                ),
                (
                    "calculation_day_info6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_6日の情報"
                    ),
                ),
                (
                    "calculation_day_info7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_7日の情報"
                    ),
                ),
                (
                    "calculation_day_info8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_8日の情報"
                    ),
                ),
                (
                    "calculation_day_info9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_9日の情報"
                    ),
                ),
                (
                    "calculation_day_info10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_10日の情報"
                    ),
                ),
                (
                    "calculation_day_info11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_11日の情報"
                    ),
                ),
                (
                    "calculation_day_info12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_12日の情報"
                    ),
                ),
                (
                    "calculation_day_info13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_13日の情報"
                    ),
                ),
                (
                    "calculation_day_info14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_14日の情報"
                    ),
                ),
                (
                    "calculation_day_info15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_15日の情報"
                    ),
                ),
                (
                    "calculation_day_info16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_16日の情報"
                    ),
                ),
                (
                    "calculation_day_info17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_17日の情報"
                    ),
                ),
                (
                    "calculation_day_info18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_18日の情報"
                    ),
                ),
                (
                    "calculation_day_info19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_19日の情報"
                    ),
                ),
                (
                    "calculation_day_info20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_20日の情報"
                    ),
                ),
                (
                    "calculation_day_info21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_21日の情報"
                    ),
                ),
                (
                    "calculation_day_info22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_22日の情報"
                    ),
                ),
                (
                    "calculation_day_info23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_23日の情報"
                    ),
                ),
                (
                    "calculation_day_info24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_24日の情報"
                    ),
                ),
                (
                    "calculation_day_info25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_25日の情報"
                    ),
                ),
                (
                    "calculation_day_info26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_26日の情報"
                    ),
                ),
                (
                    "calculation_day_info27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_27日の情報"
                    ),
                ),
                (
                    "calculation_day_info28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_28日の情報"
                    ),
                ),
                (
                    "calculation_day_info29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_29日の情報"
                    ),
                ),
                (
                    "calculation_day_info30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_30日の情報"
                    ),
                ),
                (
                    "calculation_day_info31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_31日の情報"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:歯科診療行為レコード",
                "db_table": "record_dental_practice",
            },
        ),
        migrations.CreateModel(
            name="RecordDetailSymptoms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "detail_symptoms_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="症状詳記区分"
                    ),
                ),
                (
                    "detail_symptoms_data",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="症状詳記データ",
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:症状詳記レコード",
                "db_table": "record_detail_symptoms",
            },
        ),
        migrations.CreateModel(
            name="RecordDiseasePosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "start_practice",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療開始日"
                    ),
                ),
                (
                    "transcription_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="転記区分"
                    ),
                ),
                (
                    "dentation_code_diseaase",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="歯式コード(傷病名)",
                    ),
                ),
                (
                    "disease_name_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名コード"
                    ),
                ),
                (
                    "modifier_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="修飾語コード",
                    ),
                ),
                (
                    "disease_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="傷病名称",
                    ),
                ),
                (
                    "comorbidities_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="併存傷病名数"
                    ),
                ),
                (
                    "disease_condition_transition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="病態移行"
                    ),
                ),
                (
                    "major_disease",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="主傷病"
                    ),
                ),
                (
                    "comment_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="コメントコード"
                    ),
                ),
                (
                    "supplementary_comment",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="補足コメント",
                    ),
                ),
                (
                    "dentation_code_comment",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="歯式コード(補足コメント)",
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:傷病名部位レコード",
                "db_table": "record_disease_position",
            },
        ),
        migrations.CreateModel(
            name="RecordDrug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "practice_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療識別"
                    ),
                ),
                (
                    "payer_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="負担区分",
                    ),
                ),
                (
                    "drug_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医薬品コード"
                    ),
                ),
                (
                    "usage",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="使用量",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数"
                    ),
                ),
                (
                    "count",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="回数"
                    ),
                ),
                (
                    "drug_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="医薬品区分",
                    ),
                ),
                (
                    "calculation_day_info1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_1日の情報"
                    ),
                ),
                (
                    "calculation_day_info2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_2日の情報"
                    ),
                ),
                (
                    "calculation_day_info3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_3日の情報"
                    ),
                ),
                (
                    "calculation_day_info4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_4日の情報"
                    ),
                ),
                (
                    "calculation_day_info5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_5日の情報"
                    ),
                ),
                (
                    "calculation_day_info6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_6日の情報"
                    ),
                ),
                (
                    "calculation_day_info7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_7日の情報"
                    ),
                ),
                (
                    "calculation_day_info8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_8日の情報"
                    ),
                ),
                (
                    "calculation_day_info9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_9日の情報"
                    ),
                ),
                (
                    "calculation_day_info10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_10日の情報"
                    ),
                ),
                (
                    "calculation_day_info11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_11日の情報"
                    ),
                ),
                (
                    "calculation_day_info12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_12日の情報"
                    ),
                ),
                (
                    "calculation_day_info13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_13日の情報"
                    ),
                ),
                (
                    "calculation_day_info14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_14日の情報"
                    ),
                ),
                (
                    "calculation_day_info15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_15日の情報"
                    ),
                ),
                (
                    "calculation_day_info16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_16日の情報"
                    ),
                ),
                (
                    "calculation_day_info17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_17日の情報"
                    ),
                ),
                (
                    "calculation_day_info18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_18日の情報"
                    ),
                ),
                (
                    "calculation_day_info19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_19日の情報"
                    ),
                ),
                (
                    "calculation_day_info20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_20日の情報"
                    ),
                ),
                (
                    "calculation_day_info21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_21日の情報"
                    ),
                ),
                (
                    "calculation_day_info22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_22日の情報"
                    ),
                ),
                (
                    "calculation_day_info23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_23日の情報"
                    ),
                ),
                (
                    "calculation_day_info24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_24日の情報"
                    ),
                ),
                (
                    "calculation_day_info25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_25日の情報"
                    ),
                ),
                (
                    "calculation_day_info26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_26日の情報"
                    ),
                ),
                (
                    "calculation_day_info27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_27日の情報"
                    ),
                ),
                (
                    "calculation_day_info28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_28日の情報"
                    ),
                ),
                (
                    "calculation_day_info29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_29日の情報"
                    ),
                ),
                (
                    "calculation_day_info30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_30日の情報"
                    ),
                ),
                (
                    "calculation_day_info31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_31日の情報"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:医薬品レコード",
                "db_table": "record_drug",
            },
        ),
        migrations.CreateModel(
            name="RecordInsurer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "insurer_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="保険者番号",
                    ),
                ),
                (
                    "insurer_card_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="被保険者証(手帳)等の記号",
                    ),
                ),
                (
                    "insurer_card_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="被保険者証(手帳)等の番号",
                    ),
                ),
                (
                    "practice_acrual_days",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療実日数"
                    ),
                ),
                (
                    "total_score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="合計点数"
                    ),
                ),
                (
                    "dietary_lifestyle_care_times",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="食事療養・生活療養回数"
                    ),
                ),
                (
                    "dietary_lifestyle_care_total_amount",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="食事療養・生活療養合計金額",
                    ),
                ),
                (
                    "professional_reasons",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="職務上の事由"
                    ),
                ),
                (
                    "certificate_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="証明書番号"
                    ),
                ),
                (
                    "insurance_copayments",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医療保険一部負担金額"
                    ),
                ),
                (
                    "exempt_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="減免区分"
                    ),
                ),
                (
                    "reduction_ratio",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="減額割合"
                    ),
                ),
                (
                    "reduction_amount",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="減額金額"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:保険者レコード",
                "db_table": "record_insurer",
            },
        ),
        migrations.CreateModel(
            name="RecordMedicalFeeClaim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "total_cases",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="総件数"
                    ),
                ),
                (
                    "total_score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="総合計点数"
                    ),
                ),
                (
                    "multivolume_identification_info",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="マルチボリューム識別情報",
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:診療報酬請求レコード",
                "db_table": "record_medical_fee_claim",
            },
        ),
        migrations.CreateModel(
            name="RecordMedicalInstitutionInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機"
                    ),
                ),
                (
                    "prefectures",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="都道府県"
                    ),
                ),
                (
                    "score_sheet",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数表"
                    ),
                ),
                (
                    "medical_institution_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医療機関コード"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "billing_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="請求年月"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="電話番号",
                    ),
                ),
                (
                    "notification",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="届出",
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:医療機関情報レコード",
                "db_table": "record_medical_institution_info",
            },
        ),
        migrations.CreateModel(
            name="RecordPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "practice_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療識別"
                    ),
                ),
                (
                    "payer_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="負担区分",
                    ),
                ),
                (
                    "practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療行為コード"
                    ),
                ),
                (
                    "volume_data",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="数量データ"
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数"
                    ),
                ),
                (
                    "count",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="回数"
                    ),
                ),
                (
                    "calculation_day_info1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_1日の情報"
                    ),
                ),
                (
                    "calculation_day_info2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_2日の情報"
                    ),
                ),
                (
                    "calculation_day_info3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_3日の情報"
                    ),
                ),
                (
                    "calculation_day_info4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_4日の情報"
                    ),
                ),
                (
                    "calculation_day_info5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_5日の情報"
                    ),
                ),
                (
                    "calculation_day_info6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_6日の情報"
                    ),
                ),
                (
                    "calculation_day_info7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_7日の情報"
                    ),
                ),
                (
                    "calculation_day_info8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_8日の情報"
                    ),
                ),
                (
                    "calculation_day_info9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_9日の情報"
                    ),
                ),
                (
                    "calculation_day_info10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_10日の情報"
                    ),
                ),
                (
                    "calculation_day_info11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_11日の情報"
                    ),
                ),
                (
                    "calculation_day_info12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_12日の情報"
                    ),
                ),
                (
                    "calculation_day_info13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_13日の情報"
                    ),
                ),
                (
                    "calculation_day_info14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_14日の情報"
                    ),
                ),
                (
                    "calculation_day_info15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_15日の情報"
                    ),
                ),
                (
                    "calculation_day_info16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_16日の情報"
                    ),
                ),
                (
                    "calculation_day_info17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_17日の情報"
                    ),
                ),
                (
                    "calculation_day_info18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_18日の情報"
                    ),
                ),
                (
                    "calculation_day_info19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_19日の情報"
                    ),
                ),
                (
                    "calculation_day_info20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_20日の情報"
                    ),
                ),
                (
                    "calculation_day_info21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_21日の情報"
                    ),
                ),
                (
                    "calculation_day_info22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_22日の情報"
                    ),
                ),
                (
                    "calculation_day_info23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_23日の情報"
                    ),
                ),
                (
                    "calculation_day_info24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_24日の情報"
                    ),
                ),
                (
                    "calculation_day_info25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_25日の情報"
                    ),
                ),
                (
                    "calculation_day_info26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_26日の情報"
                    ),
                ),
                (
                    "calculation_day_info27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_27日の情報"
                    ),
                ),
                (
                    "calculation_day_info28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_28日の情報"
                    ),
                ),
                (
                    "calculation_day_info29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_29日の情報"
                    ),
                ),
                (
                    "calculation_day_info30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_30日の情報"
                    ),
                ),
                (
                    "calculation_day_info31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_31日の情報"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:医科診療行為レコード",
                "db_table": "record_practice",
            },
        ),
        migrations.CreateModel(
            name="RecordPublicExpense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "payer_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="負担者番号",
                    ),
                ),
                (
                    "recipient_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="受給者番号"
                    ),
                ),
                (
                    "optional_benefit_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="任意給付区分"
                    ),
                ),
                (
                    "practice_acrual_days",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療実日数"
                    ),
                ),
                (
                    "total_score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="合計点数"
                    ),
                ),
                (
                    "copayment",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="負担金額"
                    ),
                ),
                (
                    "public_expense_benefit_copayment",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公費給付対象一部負担金"
                    ),
                ),
                (
                    "dietary_lifestyle_care_times",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="食事療養・生活療養回数"
                    ),
                ),
                (
                    "dietary_lifestyle_care_total_amount",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="食事療養・生活療養合計金額",
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:公費レコード",
                "db_table": "record_public_expense",
            },
        ),
        migrations.CreateModel(
            name="RecordReceiptCommon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "receipt_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト番号"
                    ),
                ),
                (
                    "receipt_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="レセプト種別"
                    ),
                ),
                (
                    "sex_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="男女区分"
                    ),
                ),
                (
                    "birth_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="生年月日"
                    ),
                ),
                (
                    "benefit_ratio",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="給付割合"
                    ),
                ),
                (
                    "admission_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="入院年月日"
                    ),
                ),
                (
                    "practice_start_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療開始日"
                    ),
                ),
                (
                    "return_origin_yupe",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="転帰区分"
                    ),
                ),
                (
                    "hospital_ward_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="病棟区分",
                    ),
                ),
                (
                    "copayment",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="一部負担金・食事療養費・生活療養費標準負担額区分",
                    ),
                ),
                (
                    "receipt_special_remarks",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レセプト特記事項",
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "chart_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="カルテ番号等",
                    ),
                ),
                (
                    "billing_info1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="請求情報1"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "future_hospital_billing",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="未来院請求"
                    ),
                ),
                (
                    "search_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="検索番号"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備_1"
                    ),
                ),
                (
                    "billing_info2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="請求情報2",
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備_2"
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備_3"
                    ),
                ),
                (
                    "reserve6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備_4"
                    ),
                ),
                (
                    "cana_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="カタカナ(氏名)",
                    ),
                ),
                (
                    "patient_condition",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="患者の状態"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:レセプト共通レコード",
                "db_table": "record_receipt_common",
            },
        ),
        migrations.CreateModel(
            name="RecordReceiptDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "payer_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="負担者種別"
                    ),
                ),
                (
                    "info1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="1日の情報"
                    ),
                ),
                (
                    "info2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="2日の情報"
                    ),
                ),
                (
                    "info3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="3日の情報"
                    ),
                ),
                (
                    "info4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="4日の情報"
                    ),
                ),
                (
                    "info5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="5日の情報"
                    ),
                ),
                (
                    "info6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="6日の情報"
                    ),
                ),
                (
                    "info7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="7日の情報"
                    ),
                ),
                (
                    "info8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="8日の情報"
                    ),
                ),
                (
                    "info9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="9日の情報"
                    ),
                ),
                (
                    "info10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="10日の情報"
                    ),
                ),
                (
                    "info11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="11日の情報"
                    ),
                ),
                (
                    "info12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="12日の情報"
                    ),
                ),
                (
                    "info13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="13日の情報"
                    ),
                ),
                (
                    "info14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="14日の情報"
                    ),
                ),
                (
                    "info15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="15日の情報"
                    ),
                ),
                (
                    "info16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="16日の情報"
                    ),
                ),
                (
                    "info17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="17日の情報"
                    ),
                ),
                (
                    "info18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="18日の情報"
                    ),
                ),
                (
                    "info19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="19日の情報"
                    ),
                ),
                (
                    "info20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="20日の情報"
                    ),
                ),
                (
                    "info21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="21日の情報"
                    ),
                ),
                (
                    "info22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="22日の情報"
                    ),
                ),
                (
                    "info23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="23日の情報"
                    ),
                ),
                (
                    "info24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="24日の情報"
                    ),
                ),
                (
                    "info25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="25日の情報"
                    ),
                ),
                (
                    "info26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="26日の情報"
                    ),
                ),
                (
                    "info27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="27日の情報"
                    ),
                ),
                (
                    "info28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="28日の情報"
                    ),
                ),
                (
                    "info29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="29日の情報"
                    ),
                ),
                (
                    "info30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="30日の情報"
                    ),
                ),
                (
                    "info31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="31日の情報"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:受診日等レコード",
                "db_table": "record_receipt_day",
            },
        ),
        migrations.CreateModel(
            name="RecordReceiptInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
                (
                    "prefectures",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="都道府県"
                    ),
                ),
                (
                    "score_sheet",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数表"
                    ),
                ),
                (
                    "medical_institution_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医療機関コード"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "medical_institution_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="医療機関名称",
                    ),
                ),
                (
                    "billing_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="請求年月"
                    ),
                ),
                (
                    "notification",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="届出",
                    ),
                ),
                (
                    "multivolume_identifier_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マルチボリューム識別情報",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:受付情報レコード",
                "db_table": "record_receipt_info",
            },
        ),
        migrations.CreateModel(
            name="RecordSpecialEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "practice_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療識別"
                    ),
                ),
                (
                    "payer_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="負担区分",
                    ),
                ),
                (
                    "special_equipment_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="特定器材コード"
                    ),
                ),
                (
                    "usage",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="使用量",
                    ),
                ),
                (
                    "unit_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単位コード"
                    ),
                ),
                (
                    "unit_cost",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="単価"
                    ),
                ),
                (
                    "special_equipment_add_code1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="特定器材加算等コード1",
                    ),
                ),
                (
                    "special_equipment_add_volume_data1",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="特定器材加算等数量データ1",
                    ),
                ),
                (
                    "special_equipment_add_code2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="特定器材加算等コード2"
                    ),
                ),
                (
                    "special_equipment_add_volume_data2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="特定器材加算等数量データ2",
                    ),
                ),
                (
                    "standard_or_size",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="商品名及び規格又はサイズ",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数"
                    ),
                ),
                (
                    "count",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="回数"
                    ),
                ),
                (
                    "calculation_day_info1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_1日の情報"
                    ),
                ),
                (
                    "calculation_day_info2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_2日の情報"
                    ),
                ),
                (
                    "calculation_day_info3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_3日の情報"
                    ),
                ),
                (
                    "calculation_day_info4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_4日の情報"
                    ),
                ),
                (
                    "calculation_day_info5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_5日の情報"
                    ),
                ),
                (
                    "calculation_day_info6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_6日の情報"
                    ),
                ),
                (
                    "calculation_day_info7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_7日の情報"
                    ),
                ),
                (
                    "calculation_day_info8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_8日の情報"
                    ),
                ),
                (
                    "calculation_day_info9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_9日の情報"
                    ),
                ),
                (
                    "calculation_day_info10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_10日の情報"
                    ),
                ),
                (
                    "calculation_day_info11",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_11日の情報"
                    ),
                ),
                (
                    "calculation_day_info12",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_12日の情報"
                    ),
                ),
                (
                    "calculation_day_info13",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_13日の情報"
                    ),
                ),
                (
                    "calculation_day_info14",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_14日の情報"
                    ),
                ),
                (
                    "calculation_day_info15",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_15日の情報"
                    ),
                ),
                (
                    "calculation_day_info16",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_16日の情報"
                    ),
                ),
                (
                    "calculation_day_info17",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_17日の情報"
                    ),
                ),
                (
                    "calculation_day_info18",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_18日の情報"
                    ),
                ),
                (
                    "calculation_day_info19",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_19日の情報"
                    ),
                ),
                (
                    "calculation_day_info20",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_20日の情報"
                    ),
                ),
                (
                    "calculation_day_info21",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_21日の情報"
                    ),
                ),
                (
                    "calculation_day_info22",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_22日の情報"
                    ),
                ),
                (
                    "calculation_day_info23",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_23日の情報"
                    ),
                ),
                (
                    "calculation_day_info24",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_24日の情報"
                    ),
                ),
                (
                    "calculation_day_info25",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_25日の情報"
                    ),
                ),
                (
                    "calculation_day_info26",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_26日の情報"
                    ),
                ),
                (
                    "calculation_day_info27",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_27日の情報"
                    ),
                ),
                (
                    "calculation_day_info28",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_28日の情報"
                    ),
                ),
                (
                    "calculation_day_info29",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_29日の情報"
                    ),
                ),
                (
                    "calculation_day_info30",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_30日の情報"
                    ),
                ),
                (
                    "calculation_day_info31",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定日情報_31日の情報"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:特定器材レコード",
                "db_table": "record_special_equipment",
            },
        ),
        migrations.CreateModel(
            name="RecordStatusCheck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_identification_info",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="レコード識別情報",
                    ),
                ),
                (
                    "payer_class",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="負担者種別"
                    ),
                ),
                (
                    "confirmation_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="確認区分"
                    ),
                ),
                (
                    "insurer_number_etc",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="保険者番号等(資格確認)",
                    ),
                ),
                (
                    "insurer_card_code_status_check",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="被保険者証(手帳)等の記号(資格確認)",
                    ),
                ),
                (
                    "insurer_card_number_status_check",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="被保険者証(手帳)等の番号(資格確認)",
                    ),
                ),
                (
                    "branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="枝番"
                    ),
                ),
                (
                    "recipient_id",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="受給者番号"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "practice_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="診療年月"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="氏名",
                    ),
                ),
                (
                    "row_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="列番号"
                    ),
                ),
                (
                    "examination_pay_institution",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="審査支払機関"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "R:資格確認レコード",
                "db_table": "record_status_check",
            },
        ),
        migrations.CreateModel(
            name="TableAgeLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "dental_practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科診療行為コード"
                    ),
                ),
                (
                    "bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示番号_区分",
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分番号"
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_項番"
                    ),
                ),
                (
                    "add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード",
                    ),
                ),
                (
                    "practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_基本名称",
                    ),
                ),
                (
                    "practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_省略名称",
                    ),
                ),
                (
                    "lower_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="下限年齢",
                    ),
                ),
                (
                    "upper_age",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="上限年齢",
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:年齢制限テーブル",
                "db_table": "table_age_limit",
            },
        ),
        migrations.CreateModel(
            name="TableAnnotationAddItemAdd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "group_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="グループ番号",
                    ),
                ),
                (
                    "annotation_add_item_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="注加算項目_加算コード",
                    ),
                ),
                (
                    "annotation_add_item_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="注加算項目_歯科診療行為コード",
                    ),
                ),
                (
                    "annotation_add_item_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="注加算項目_診療行為名称_基本名称",
                    ),
                ),
                (
                    "annotation_add_item_add_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="注加算項目_加算識別"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:注加算対応テーブル",
                "db_table": "table_annotation_add_item_add",
            },
        ),
        migrations.CreateModel(
            name="TableBasic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "master_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="マスター種別",
                    ),
                ),
                (
                    "dental_practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科診療行為コード"
                    ),
                ),
                (
                    "bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示番号_区分",
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分番号"
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分項番"
                    ),
                ),
                (
                    "add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード",
                    ),
                ),
                (
                    "practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_基本名称",
                    ),
                ),
                (
                    "practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_省略名称",
                    ),
                ),
                (
                    "new_score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="新又は現点数_点数等識別"
                    ),
                ),
                (
                    "new_score_etc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="新又は現点数_点数等",
                    ),
                ),
                (
                    "old_score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="旧点数_点数等識別"
                    ),
                ),
                (
                    "old_score_etc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="旧点数_点数等",
                    ),
                ),
                (
                    "in_out_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="入外適用区分"
                    ),
                ),
                (
                    "late_elderly_medical_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="後期高齢者医療適用区分"
                    ),
                ),
                (
                    "time_add_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="時間加算区分"
                    ),
                ),
                (
                    "hospital_clinics_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="病院・診療所区分"
                    ),
                ),
                (
                    "nurse_add",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="看護加算"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "area_add",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="地域加算"
                    ),
                ),
                (
                    "injury_name_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="傷病名関連区分"
                    ),
                ),
                (
                    "drug_name_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="医薬品関連区分"
                    ),
                ),
                (
                    "number_of_bed_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="病床数区分"
                    ),
                ),
                (
                    "notification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="届出"
                    ),
                ),
                (
                    "future_hospital",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="未来院"
                    ),
                ),
                (
                    "short_stay_surgery",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="短期滞在手術"
                    ),
                ),
                (
                    "special_remarks",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="特記事項"
                    ),
                ),
                (
                    "Inspection_decision_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="検査等実施判断区分"
                    ),
                ),
                (
                    "Inspection_decision_group_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="検査等実施判断グループ区分",
                    ),
                ),
                (
                    "diminution_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="逓減対象区分"
                    ),
                ),
                (
                    "comprehensive_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="包括逓減区分"
                    ),
                ),
                (
                    "base_conformance_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="基準適合識別_適合区分"
                    ),
                ),
                (
                    "base_conformance_facility_standard",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="基準適合識別_対象施設基準",
                    ),
                ),
                (
                    "facility_standard_code1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード①"
                    ),
                ),
                (
                    "facility_standard_code2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード②"
                    ),
                ),
                (
                    "facility_standard_code3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード③"
                    ),
                ),
                (
                    "facility_standard_code4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード④"
                    ),
                ),
                (
                    "facility_standard_code5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード⑤"
                    ),
                ),
                (
                    "facility_standard_code6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード⑥"
                    ),
                ),
                (
                    "facility_standard_code7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード⑦"
                    ),
                ),
                (
                    "facility_standard_code8",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード⑧"
                    ),
                ),
                (
                    "facility_standard_code9",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード⑨"
                    ),
                ),
                (
                    "facility_standard_code10",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="施設基準コード⑩"
                    ),
                ),
                (
                    "general_rule_add_group",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="通則加算グループ",
                    ),
                ),
                (
                    "basic_add_group",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="基本加算グループ",
                    ),
                ),
                (
                    "annotation_add_group",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="注加算グループ",
                    ),
                ),
                (
                    "tech_materials_add_group",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="手技・材料加算グループ",
                    ),
                ),
                (
                    "calculation_limit_table_identification",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="算定回数限度テーブル関連識別",
                    ),
                ),
                (
                    "etch_table_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみテーブル関連識別"
                    ),
                ),
                (
                    "age_limit_table_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="年齢制限テーブル関連識別"
                    ),
                ),
                (
                    "contradiction_table_identification",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="併算定背反テーブル関連識別",
                    ),
                ),
                (
                    "days_table_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="実日数テーブル関連識別"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve4",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "prolonged_anesthesia_control_add",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="長時間麻酔管理加算",
                    ),
                ),
                (
                    "cancer_pathological_specimen_add",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="悪性腫瘍病理組織標本加算",
                    ),
                ),
                (
                    "reserve5",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備３"
                    ),
                ),
                (
                    "reserve6",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備４"
                    ),
                ),
                (
                    "reserve7",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備５"
                    ),
                ),
                (
                    "publication_order_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="公表順序番号"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:基本テーブル",
                "db_table": "table_basic",
            },
        ),
        migrations.CreateModel(
            name="TableBasicAddItemAdd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "group_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="グループ番号",
                    ),
                ),
                (
                    "basic_add_item_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="基本加算項目_加算コード",
                    ),
                ),
                (
                    "basic_add_item_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="基本加算項目_歯科診療行為コード",
                    ),
                ),
                (
                    "basic_add_item_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="基本加算項目_診療行為名称_基本名称",
                    ),
                ),
                (
                    "basic_add_item_add_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="基本加算項目_加算識別"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:基本加算対応テーブル",
                "db_table": "table_basic_add_item_add",
            },
        ),
        migrations.CreateModel(
            name="TableCalculationLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "dental_practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科診療行為コード"
                    ),
                ),
                (
                    "bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示番号_区分",
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分番号"
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_項番"
                    ),
                ),
                (
                    "add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード",
                    ),
                ),
                (
                    "practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_基本名称",
                    ),
                ),
                (
                    "practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_省略名称",
                    ),
                ),
                (
                    "calculation_unit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定単位"
                    ),
                ),
                (
                    "calculation_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="算定回数限度"
                    ),
                ),
                (
                    "upper_limit_error_process",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="上限回数エラー処理"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:算定回数限度テーブル",
                "db_table": "table_calculation_limit",
            },
        ),
        migrations.CreateModel(
            name="TableEtch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "dental_practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科診療行為コード"
                    ),
                ),
                (
                    "bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示番号_区分",
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分番号"
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_項番"
                    ),
                ),
                (
                    "add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード",
                    ),
                ),
                (
                    "practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_基本名称",
                    ),
                ),
                (
                    "practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_省略名称",
                    ),
                ),
                (
                    "score_etc_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="点数等識別"
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="点数",
                    ),
                ),
                (
                    "etch_lower_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ下限値"
                    ),
                ),
                (
                    "etch_upper_limit",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ上限値"
                    ),
                ),
                (
                    "etch_value",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ値"
                    ),
                ),
                (
                    "etch_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                        verbose_name="きざみ点数",
                    ),
                ),
                (
                    "etch_limits_error_process",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="きざみ上下限エラー処理"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:きざみテーブル",
                "db_table": "table_etch",
            },
        ),
        migrations.CreateModel(
            name="TableFixCalculationContradiction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "dental_practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科診療行為コード"
                    ),
                ),
                (
                    "bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示番号_区分",
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分番号"
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_項番"
                    ),
                ),
                (
                    "add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード",
                    ),
                ),
                (
                    "practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_基本名称",
                    ),
                ),
                (
                    "practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction1_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反1_算定可否"
                    ),
                ),
                (
                    "contradiction1_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反1_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction1_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反1_告示番号_区分",
                    ),
                ),
                (
                    "contradiction1_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反1_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction1_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反1_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction1_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反1_告示番号_項番"
                    ),
                ),
                (
                    "contradiction1_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反1_加算コード",
                    ),
                ),
                (
                    "contradiction1_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反1_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction1_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反1_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction2_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反2_算定可否"
                    ),
                ),
                (
                    "contradiction2_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反2_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction2_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反2_告示番号_区分",
                    ),
                ),
                (
                    "contradiction2_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反2_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction2_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反2_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction2_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反2_告示番号_項番"
                    ),
                ),
                (
                    "contradiction2_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反2_加算コード",
                    ),
                ),
                (
                    "contradiction2_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反2_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction2_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反2_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction3_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反3_算定可否"
                    ),
                ),
                (
                    "contradiction3_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反3_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction3_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反3_告示番号_区分",
                    ),
                ),
                (
                    "contradiction3_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反3_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction3_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反3_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction3_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反3_告示番号_項番"
                    ),
                ),
                (
                    "contradiction3_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反3_加算コード",
                    ),
                ),
                (
                    "contradiction3_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反3_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction3_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反3_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction4_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反4_算定可否"
                    ),
                ),
                (
                    "contradiction4_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反4_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction4_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反4_告示番号_区分",
                    ),
                ),
                (
                    "contradiction4_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反4_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction4_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反4_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction4_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反4_告示番号_項番"
                    ),
                ),
                (
                    "contradiction4_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反4_加算コード",
                    ),
                ),
                (
                    "contradiction4_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反4_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction4_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反4_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction5_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反5_算定可否"
                    ),
                ),
                (
                    "contradiction5_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反5_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction5_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反5_告示番号_区分",
                    ),
                ),
                (
                    "contradiction5_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反5_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction5_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反5_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction5_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反5_告示番号_項番"
                    ),
                ),
                (
                    "contradiction5_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反5_加算コード",
                    ),
                ),
                (
                    "contradiction5_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反5_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction5_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反5_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction6_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反6_算定可否"
                    ),
                ),
                (
                    "contradiction6_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反6_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction6_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反6_告示番号_区分",
                    ),
                ),
                (
                    "contradiction6_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反6_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction6_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反6_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction6_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反6_告示番号_項番"
                    ),
                ),
                (
                    "contradiction6_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反6_加算コード",
                    ),
                ),
                (
                    "contradiction6_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反6_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction6_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反6_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction7_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反7_算定可否"
                    ),
                ),
                (
                    "contradiction7_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反7_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction7_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反7_告示番号_区分",
                    ),
                ),
                (
                    "contradiction7_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反7_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction7_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反7_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction7_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反7_告示番号_項番"
                    ),
                ),
                (
                    "contradiction7_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反7_加算コード",
                    ),
                ),
                (
                    "contradiction7_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反7_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction7_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反7_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction8_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反8_算定可否"
                    ),
                ),
                (
                    "contradiction8_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反8_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction8_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反8_告示番号_区分",
                    ),
                ),
                (
                    "contradiction8_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反8_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction8_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反8_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction8_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反8_告示番号_項番"
                    ),
                ),
                (
                    "contradiction8_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反8_加算コード",
                    ),
                ),
                (
                    "contradiction8_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反8_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction8_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反8_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction9_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反9_算定可否"
                    ),
                ),
                (
                    "contradiction9_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反9_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction9_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反9_告示番号_区分",
                    ),
                ),
                (
                    "contradiction9_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反9_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction9_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反9_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction9_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反9_告示番号_項番"
                    ),
                ),
                (
                    "contradiction9_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反9_加算コード",
                    ),
                ),
                (
                    "contradiction9_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反9_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction9_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反9_診療行為名称_省略名称",
                    ),
                ),
                (
                    "contradiction10_calculability",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反10_算定可否"
                    ),
                ),
                (
                    "contradiction10_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反10_歯科診療行為コード",
                    ),
                ),
                (
                    "contradiction10_bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反10_告示番号_区分",
                    ),
                ),
                (
                    "contradiction10_bulletin_number_type_number",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="背反10_告示番号_区分番号",
                    ),
                ),
                (
                    "contradiction10_bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反10_告示番号_枝番"
                    ),
                ),
                (
                    "contradiction10_bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="背反10_告示番号_項番"
                    ),
                ),
                (
                    "contradiction10_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反10_加算コード",
                    ),
                ),
                (
                    "contradiction10_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反10_診療行為名称_基本名称",
                    ),
                ),
                (
                    "contradiction10_practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="背反10_診療行為名称_省略名称",
                    ),
                ),
                (
                    "change_date",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_date",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve1",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve2",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
                (
                    "reserve3",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:併算定背反テーブル",
                "db_table": "table_fix_calculation_contradiction",
            },
        ),
        migrations.CreateModel(
            name="TableGeneralRuleAddItemAdd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "group_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="グループ番号",
                    ),
                ),
                (
                    "general_rule_add_item_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="通則加算項目_加算コード",
                    ),
                ),
                (
                    "general_rule_add_item_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="通則加算項目_歯科診療行為コード",
                    ),
                ),
                (
                    "general_rule_add_item_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="通則加算項目_診療行為名称_基本名称",
                    ),
                ),
                (
                    "general_rule_add_item_add_identification",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="通則加算項目_加算識別"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:通則加算対応テーブル",
                "db_table": "table_general_rule_add_item_add",
            },
        ),
        migrations.CreateModel(
            name="TableRealDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "dental_practice_code",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="歯科診療行為コード"
                    ),
                ),
                (
                    "bulletin_number_type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="告示番号_区分",
                    ),
                ),
                (
                    "bulletin_number_type_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_区分番号"
                    ),
                ),
                (
                    "bulletin_number_branch_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_枝番"
                    ),
                ),
                (
                    "bulletin_number_item_number",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="告示番号_項番"
                    ),
                ),
                (
                    "add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="加算コード",
                    ),
                ),
                (
                    "practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_基本名称",
                    ),
                ),
                (
                    "practice_abbreviation_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="診療行為名称_省略名称",
                    ),
                ),
                (
                    "real_day",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="実日数"
                    ),
                ),
                (
                    "days_or_times",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="日数・回数"
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:実日数関連テーブル",
                "db_table": "table_real_day",
            },
        ),
        migrations.CreateModel(
            name="TableTechMaterialsAddItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="変更区分"
                    ),
                ),
                (
                    "group_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="グループ番号",
                    ),
                ),
                (
                    "tech_materials_add_item_add_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="手技・材料加算項目_加算コード",
                    ),
                ),
                (
                    "tech_materials_add_item_dental_practice_code",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="手技・材料加算項目_歯科診療行為コード",
                    ),
                ),
                (
                    "tech_materials_add_item_practice_bassic_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="手技・材料加算項目_診療行為名称_基本名称",
                    ),
                ),
                (
                    "tech_materials_add_item_add_identification",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="手技・材料加算項目_加算識別",
                    ),
                ),
                (
                    "change_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="変更年月日"
                    ),
                ),
                (
                    "abolition_day",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="廃止年月日"
                    ),
                ),
                (
                    "reserve",
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name="予備"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "T:手技・材料加算対応テーブル",
                "db_table": "table_tech_materials_add_item",
            },
        ),
    ]
